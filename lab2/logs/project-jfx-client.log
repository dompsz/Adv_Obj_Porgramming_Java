2025-04-07 12:35:46.361 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 12:35:46.382 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 12:41:35.599 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 12:41:35.606 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 12:53:59.177 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 12:53:59.186 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 12:59:15.724 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 12:59:15.730 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:01:40.460 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:01:40.468 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:26:35.560 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:26:35.567 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:26:55.471 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:56.999 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.054 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.230 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.406 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.566 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.678 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:26:57.742 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: Tego
2025-04-07 13:27:23.408 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:27:23.417 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:29:05.614 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: 1
2025-04-07 13:29:09.870 [JavaFX Application Thread] INFO  c.p.controller.ProjectController.openZadanieFrame(412) - Opening task frame for project: 1
2025-04-07 13:31:53.793 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:31:53.803 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:34:57.545 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:34:57.552 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:39:53.844 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:39:53.850 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:44:14.221 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:44:14.228 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:46:52.874 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:46:52.881 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:47:16.316 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:47:16.324 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:56:24.489 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:56:24.495 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 13:57:58.546 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 13:57:58.554 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-07 14:26:29.372 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
dataczas_utworzenia TIMESTAMP DEFAULT now(),
data_oddania DATE,
CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
nazwa VARCHAR(50) NOT NULL,
opis VARCHAR(1000),
kolejnosc INTEGER,
dataczas_utworzenia TIMESTAMP DEFAULT now(),
projekt_id INTEGER NOT NULL,
CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-07 14:26:29.379 [main] INFO  c.project.datasource.DbInitializer.init(47) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id)
REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

